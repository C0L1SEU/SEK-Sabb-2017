#define OFFSET_SAMPLES 3000.0
#define RAIO_RODA 3
#define VELOCIDADE_MAX 12
#define VELOCIDADE_MIN 10
#define POT_MAX 70

int pot = 10;
float velocidade_a = 0, velocidade_c = 0, velocidade_media = 0;

float CalculaDistancia(float angulo_motor){ // Calcula a distancia em cm equivalente a angulacao do motor passada como argumento
    float distancia;
    distancia = (angulo_motor*2*PI*RAIO_RODA)/(360);
    return distancia;
}

float VelocidadeRobo(byte output){ // Pega o deltaT e o deltaTeta, transforma o deltaTeta em deltaS e calcula a velocidade do robo
    float velocidade, angulo_inicial, angulo_final, angulo, distancia;
    unsigned long tempo_inicial, tempo_final, tempo;

    tempo_inicial = CurrentTick();
    angulo_inicial = MotorRotationCount(output);
    Wait(100);
    tempo_final = CurrentTick();
    angulo_final = MotorRotationCount(output);

    angulo = angulo_final - angulo_inicial;
    tempo = tempo_final - tempo_inicial;
    distancia = CalculaDistancia(angulo);
    velocidade = 1000.0*(distancia/tempo);

    return velocidade;
}

void AjustaVelocidade(){ // Aumenta ou diminui a potencia passada aos motores verificando a velocidade media e os limites de velocidade estabelecidos
    while((velocidade_media < VELOCIDADE_MIN || velocidade_media > VELOCIDADE_MAX)){
        OnFwdReg(OUT_AC, pot, OUT_REGMODE_SYNC);
        velocidade_a = VelocidadeRobo(OUT_A);
        velocidade_c = VelocidadeRobo(OUT_C);

        velocidade_media = (velocidade_a + velocidade_c)/2;

        if(velocidade_media < VELOCIDADE_MIN && pot <= POT_MAX){
            pot += 15;
        } else if(velocidade_media > VELOCIDADE_MAX){
            pot -= 5;
        }
    }
}

task main(){
    AjustaVelocidade();
    velocidade_a = VelocidadeRobo(OUT_A);
    velocidade_c = VelocidadeRobo(OUT_C);

    while(1){
        ClearLine(LCD_LINE1);
        TextOut(0, LCD_LINE1, "POT:");
        NumOut(48, LCD_LINE1, pot);
        ClearLine(LCD_LINE2);
        TextOut(0, LCD_LINE2, "SPEED_A:");
        NumOut(48, LCD_LINE2, velocidade_a);
        ClearLine(LCD_LINE3);
        TextOut(0, LCD_LINE3, "SPEED_C:");
        NumOut(48, LCD_LINE3, velocidade_c);
    }   
}
