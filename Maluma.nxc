#define BT_CONN 1
#define OUTBOX 5
#define INBOX 1
#define R_ULTRAS IN_2
#define L_ULTRAS
#define CLEARLINE(L) \
TextOut(0,L," ");

float valor_filtrado = 30;
float insensibilidade = 0.7;

sub BTCheck(int conn){
	while (!BluetoothStatus(conn)==NO_ERR){
		TextOut(5,LCD_LINE2,"Error");
		Wait(1000);
		Stop(true);
	}
}

void FiltraUS(byte sensor){ // Filtra os valor_filtradoes lidos pelo sensor ultrasonico (algoritmo do Bruno)
    int i;
    float leitura_atual;

    leitura_atual = SensorUS(sensor);
    if(leitura_atual < 30)
    	insensibilidade = 0.5;
    else
    	insensibilidade = 0.7;
    valor_filtrado = valor_filtrado * insensibilidade + leitura_atual * (1-insensibilidade);
}

task main(){

	SetSensorUltrasonic(R_ULTRAS);

	int ack;
	int i;
	int quantasPessoas = 0;
	int ultimoNumero = 1;

	BTCheck(BT_CONN);
	TextOut(10,LCD_LINE1,"Master sending");

	while(true){
		FiltraUS(R_ULTRAS);
		NumOut(5,LCD_LINE4,valor_filtrado);
		if(valor_filtrado <= 18 && quantasPessoas < 4){
			CLEARLINE(LCD_LINE3);
			NumOut(5,LCD_LINE3,1);
			ack = 0;
			SendRemoteNumber(BT_CONN,OUTBOX,1);
			until(ack==0xFF) {
				SendRemoteNumber(BT_CONN,OUTBOX,1);
				until(ReceiveRemoteNumber(INBOX,true,ack) == NO_ERR);
			}
			quantasPessoas++;
			ultimoNumero = 1;
		}else{
			CLEARLINE(LCD_LINE3);
			NumOut(5,LCD_LINE3,0);
			ack = 0;
			SendRemoteNumber(BT_CONN,OUTBOX,0);
			ultimoNumero = 0;
		}
		FiltraUS(R_ULTRAS);
	}

}
